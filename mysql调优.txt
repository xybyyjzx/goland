客户端

  
服务端  连接器 分析器（词法分析 语法分析） 优化器（ｒｂｏ规则优化　ｃｂｏ成本优化）
执行器　和存储引擎　　　　　　

减少ｉｏ　８　之前有缓存　（数据变更频繁导致缓存命中低　８之后废弃了）

  
存储引擎

性能监控工具
ｓｈｏｗ　ｐｒｏｆｉｌｅ　工具

ｓｅｔ　ｐｒｏｆｉｌｉｎｇ　＝　１　
查看ｓｑｌ　各个步骤执行时间　也可以查看消耗的系统资源　ｃｐｕ　ｉｏ　等
之后可能废弃　不推荐
推荐另一个　ｓｃｈｅｍａ　默认是开启的　　
ｓｈｏｗ　ｄａｔａｂａｓｅｓ　中有一个ｓｃｈｅｍａ数据库　其中有很多表


ｓｈｏｗ　ｐｒｏｃｅｓｓｌｉｓｔ　监控数据库连接
可以杀掉连接
数据库连接池　德鲁伊　性能监控　

ｓｃｈｅｍａ　与数据类型优化
更小的通常更高　　更小的数据类型　
简单就好
ｉｐ地址最好用整型　有一个函数可以转换　ｉｎｅｔ＿ａｔｏｎ（＇１９２．１６８．１．１＇）
ｉｎｅｔ＿ｎｔｏａ（＇３３３３３３２１５６６＇）
整型视觉效果不明显
尽量避免使用ｎｕｌｌ　能不使用尽量不使用　其优化统计　值比较　复杂　可使用＇＇空字符串
整型　8　16　34　64　位　
字符　字符串选择　
ｃｈａｒ　最大长度255　会自动删除末尾空格　写效率高于ｖａｒｃｈａｒ　以空间换时间　
	存储长度波动不大的数据　如ｍｄ５数据　短字符串　经常更新的字符串
ｖａｒｃｈａｒ　：　可变长度　磁盘页４ｋｂ　内存都是读页
ｂｌｏｂ　ｔｅｘｔ　用得少　一般都是存文件　保存路径
时间类型　：
ｔｉｍｅ　：
ｄａｔａｔｉｍｅ：8个字符　时区无关　保存到毫秒　有日期函数
ｔｉｍｅｓｔａｍｐ　：　占用4个子节　1970、1、1　2038.01．19　依赖时区
ｄａｔｅ　：占用三个子节　比其他占用少　ｄａｔｅ时间日期函数转换　1000.0.0　9999.12.31
ｔｉｍｅｓｔａｍｐ　用得比较多
使用枚举代替字符串类型　ｍｙｓｑｌ　会压缩枚举类型　底层存储整型　有对应的文件做转换
	还可进行排序　与定义表的顺序有关系　尽量不要用数值
特殊类型　ｉｐ地址　
类型设计的好　长度设计　表空间占用得少　ｉｎｔ的长度






































